rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Deny all reads and writes by default.
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS COLLECTION
    // Users can read their own data.
    // Admins can read and write any user's data.
    match /users/{userId} {
      allow get: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Note: User creation should be handled by a server-side process or admin action, not direct client creation.
    }

    // RECEIPTS COLLECTION
    // Employees can create receipts.
    // Users can read their own receipts.
    // Managers can read receipts of their team members (assumes a 'managerId' field on the user document).
    // Admins can read all receipts.
    match /receipts/{receiptId} {
      allow create: if request.auth.uid == request.resource.data.userId && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'employee';
      allow get, list: if request.auth.uid == resource.data.userId
                    || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
                    || (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager' && get(/databases/$(database)/documents/users/$(resource.data.userId)).data.managerId == request.auth.uid);
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}